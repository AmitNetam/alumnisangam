<?php
// auto-generated by sfPropelCrud
// date: 2009/03/16 06:16:16
?>
<?php

/**
 * pepuser actions.
 *
 * @package    sf_sandbox
 * @subpackage pepuser
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class pepuserActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('pepuser', 'list');
  }

  public function executeList()
  {
    $this->pepusers = PepuserPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->pepuser = PepuserPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->pepuser);
  }

  public function executeCreate()
  {
    $this->pepuser = new Pepuser();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->pepuser = PepuserPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->pepuser);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $pepuser = new Pepuser();
    }
    else
    {
      $pepuser = PepuserPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($pepuser);
    }

    $pepuser->setId($this->getRequestParameter('id'));
    $pepuser->setUserId($this->getRequestParameter('user_id') ? $this->getRequestParameter('user_id') : null);
    $pepuser->setPeppageId($this->getRequestParameter('peppage_id') ? $this->getRequestParameter('peppage_id') : null);

    $pepuser->save();

    return $this->redirect('pepuser/show?id='.$pepuser->getId());
  }

  public function executeDelete()
  {
    $pepuser = PepuserPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($pepuser);

    $pepuser->delete();

    return $this->redirect('pepuser/list');
  }
}
