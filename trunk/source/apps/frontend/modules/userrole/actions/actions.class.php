<?php
// auto-generated by sfPropelCrud
// date: 2009/02/10 08:15:43
?>
<?php

/**
 * userrole actions.
 *
 * @package    sf_sandbox
 * @subpackage userrole
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class userroleActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('userrole', 'list');
  }

  public function executeList()
  {
    $this->userroles = UserrolePeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->userrole = UserrolePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->userrole);
  }

  public function executeCreate()
  {
    $this->userrole = new Userrole();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->userrole = UserrolePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->userrole);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $userrole = new Userrole();
    }
    else
    {
      $userrole = UserrolePeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($userrole);
    }

    $userrole->setId($this->getRequestParameter('id'));
    $userrole->setUserId($this->getRequestParameter('user_id') ? $this->getRequestParameter('user_id') : null);
    $userrole->setRoleId($this->getRequestParameter('role_id') ? $this->getRequestParameter('role_id') : null);

    $userrole->save();

    return $this->redirect('userrole/show?id='.$userrole->getId());
  }

  public function executeDelete()
  {
    $userrole = UserrolePeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($userrole);

    $userrole->delete();

    return $this->redirect('userrole/list');
  }
}
