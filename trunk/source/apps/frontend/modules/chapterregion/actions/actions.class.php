<?php
// auto-generated by sfPropelCrud
// date: 2009/02/10 08:18:30
?>
<?php

/**
 * chapterregion actions.
 *
 * @package    sf_sandbox
 * @subpackage chapterregion
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class chapterregionActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('chapterregion', 'list');
  }

  public function executeList()
  {
    $this->chapterregions = ChapterregionPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->chapterregion = ChapterregionPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->chapterregion);
  }

  public function executeCreate()
  {
    $this->chapterregion = new Chapterregion();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->chapterregion = ChapterregionPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->chapterregion);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $chapterregion = new Chapterregion();
    }
    else
    {
      $chapterregion = ChapterregionPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($chapterregion);
    }

    $chapterregion->setId($this->getRequestParameter('id'));
    $chapterregion->setChapterId($this->getRequestParameter('chapter_id') ? $this->getRequestParameter('chapter_id') : null);
    $chapterregion->setRegionId($this->getRequestParameter('region_id') ? $this->getRequestParameter('region_id') : null);

    $chapterregion->save();

    return $this->redirect('chapterregion/show?id='.$chapterregion->getId());
  }

  public function executeDelete()
  {
    $chapterregion = ChapterregionPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($chapterregion);

    $chapterregion->delete();

    return $this->redirect('chapterregion/list');
  }
}
