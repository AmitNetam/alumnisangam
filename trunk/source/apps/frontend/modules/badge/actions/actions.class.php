<?php
// auto-generated by sfPropelCrud
// date: 2009/02/10 08:19:06
?>
<?php

/**
 * badge actions.
 *
 * @package    sf_sandbox
 * @subpackage badge
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class badgeActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('badge', 'list');
  }

  public function executeList()
  {
    $this->badges = BadgePeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->badge = BadgePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->badge);
  }

  public function executeCreate()
  {
    $this->badge = new Badge();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->badge = BadgePeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->badge);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $badge = new Badge();
    }
    else
    {
      $badge = BadgePeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($badge);
    }
  	if($this->getRequest()->getFileName('image'))
	{
    	$fileName = md5($this->getRequest()->getFileName('image').time().rand(0, 99999));
	 	$ext = $this->getRequest()->getFileExtension('image');
	 	$this->getRequest()->moveFile('image', sfConfig::get('sf_upload_dir')."//badges//".$fileName.$ext);
	 	$fullname = $fileName.$ext;
	 	$fullpath = '/uploads/badges/'.$fullname;
    	$badge->setImage($fullpath);
	}
    $badge->setId($this->getRequestParameter('id'));
    $badge->setName($this->getRequestParameter('name'));
    

    $badge->save();

    return $this->redirect('badge/show?id='.$badge->getId());
  }

  public function executeDelete()
  {
    $badge = BadgePeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($badge);

    $badge->delete();

    return $this->redirect('badge/list');
  }
}
