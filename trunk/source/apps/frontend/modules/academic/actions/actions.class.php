<?php
// auto-generated by sfPropelCrud
// date: 2009/02/10 08:17:12
?>
<?php

/**
 * academic actions.
 *
 * @package    sf_sandbox
 * @subpackage academic
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class academicActions extends sfActions
{

  public function executeShow()
  {
	$userid = $this->getUser()->getAttribute('userid');
    $c = new Criteria();
    $c->add(AcademicPeer::USER_ID, $userid);
    $this->academics = AcademicPeer::doSelect($c);
  }

  public function executeCreate()
  {
    $this->academic = new Academic();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
  	$c = new Criteria();
  	$c->add(UserPeer::USERNAME, $this->getUser()->getAttribute('username'));
  	$user = UserPeer::doSelectOne($c);
    
    $c = new Criteria();
    $c->add(AcademicPeer::USER_ID, $user->getId());
    $this->academic = AcademicPeer::doSelectOne($c);
  	
    //$this->academic = AcademicPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->academic);
    $this->privacyoptions = Array('1' => 'Myself', '2' => 'My Classmates', '3' => 'Everyone');   
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $academic = new Academic();
    }
    else
    {
      $academic = AcademicPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($academic);
    }

    $academic->setId($this->getRequestParameter('id'));
    $academic->setUserId($this->getRequestParameter('user_id') ? $this->getRequestParameter('user_id') : null);
    $academic->setDegree($this->getRequestParameter('degree'));
    $academic->setDegreeflag($this->getRequestParameter('degreeflag'));
    $academic->setYear($this->getRequestParameter('year'));
    $academic->setYearflag($this->getRequestParameter('yearflag'));
    $academic->setDepartment($this->getRequestParameter('department'));
    $academic->setDepartmentflag($this->getRequestParameter('departmentflag'));
    $academic->setMajor($this->getRequestParameter('major'));
    $academic->setMajorflag($this->getRequestParameter('majorflag'));
    $academic->setInstitute($this->getRequestParameter('institute'));
    $academic->setInstituteflag($this->getRequestParameter('instituteflag'));

    $academic->save();

    return $this->redirect('academic/show?id='.$academic->getId());
  }

  public function executeDelete()
  {
    $academic = AcademicPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($academic);

    $academic->delete();

    return $this->redirect('academic/list');
  }
}
  
