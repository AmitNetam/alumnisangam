<?php
// auto-generated by sfPropelCrud
// date: 2009/02/10 08:16:55
?>
<?php

/**
 * family actions.
 *
 * @package    sf_sandbox
 * @subpackage family
 * @author     Your name here
 * @version    SVN: $Id: actions.class.php 3335 2007-01-23 16:19:56Z fabien $
 */
class familyActions extends sfActions
{
  public function executeIndex()
  {
    return $this->forward('family', 'list');
  }

  public function executeList()
  {
    $this->familys = FamilyPeer::doSelect(new Criteria());
  }

  public function executeShow()
  {
    $this->family = FamilyPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->family);
  }

  public function executeCreate()
  {
    $this->family = new Family();

    $this->setTemplate('edit');
  }

  public function executeEdit()
  {
    $this->family = FamilyPeer::retrieveByPk($this->getRequestParameter('id'));
    $this->forward404Unless($this->family);
  }

  public function executeUpdate()
  {
    if (!$this->getRequestParameter('id'))
    {
      $family = new Family();
    }
    else
    {
      $family = FamilyPeer::retrieveByPk($this->getRequestParameter('id'));
      $this->forward404Unless($family);
    }

    $family->setId($this->getRequestParameter('id'));
    $family->setUserId($this->getRequestParameter('user_id') ? $this->getRequestParameter('user_id') : null);
    if ($this->getRequestParameter('dom'))
    {
      list($d, $m, $y) = sfI18N::getDateForCulture($this->getRequestParameter('dom'), $this->getUser()->getCulture());
      $family->setDom("$y-$m-$d");
    }
    $family->setDomflag($this->getRequestParameter('domflag'));
    $family->setSpousename($this->getRequestParameter('spousename'));
    $family->setSpousenameflag($this->getRequestParameter('spousenameflag'));
    $family->setSpouseemployer($this->getRequestParameter('spouseemployer'));
    $family->setSpouseemployerflag($this->getRequestParameter('spouseemployerflag'));
    $family->setSpousetitle($this->getRequestParameter('spousetitle'));
    $family->setSpousetitleflag($this->getRequestParameter('spousetitleflag'));
    $family->setChildren($this->getRequestParameter('children'));
    $family->setChildrenflag($this->getRequestParameter('childrenflag'));

    $family->save();

    return $this->redirect('family/show?id='.$family->getId());
  }

  public function executeDelete()
  {
    $family = FamilyPeer::retrieveByPk($this->getRequestParameter('id'));

    $this->forward404Unless($family);

    $family->delete();

    return $this->redirect('family/list');
  }
}
